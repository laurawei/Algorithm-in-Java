* Algorithm in Java
** 一 One
** 二 Two
*** KClosest.java (K Closest In Sorted Array)
- Given a target integer T, a non-negative integer K and an integer array A sorted in ascending order, find the K closest numbers to T in A.
- A = {1, 2, 3}, T = 2, K = 3, return {2, 1, 3} or {2, 3, 1}
*** FirstOccur.java (First Occurrence)
- Given a target integer T and an integer array A sorted in ascending order, find the index of the first occurrence of T in A or return -1 if there is no such index.
- A = {1, 2, 3}, T = 2, return 1
*** Search In Unknown Sized Sorted Array
- Given a integer dictionary A of unknown size, where the numbers in the dictionary are sorted in ascending order, determine if a given target integer T is in the dictionary. Return the index of T in A, return -1 if T is not in A.
- A = {1, 2, 5, 9, ......}, T = 5, return 2
- A = {1, 2, 5, 9, 12, ......}, T = 7, return -1
*** Search In Sorted Matrix I
- Given a 2D matrix that contains integers only, which each row is sorted in an ascending order. The first element of next row is larger than (or equal to) the last element of previous row.
- Given a target number, returning the position that the target locates within the matrix. If the target number does not exist in the matrix, return {-1, -1}.
- matrix = { {1, 2, 3}, {4, 5, 7}, {8, 9, 10} }
- target = 7, return {1, 2}
- target = 6, return {-1, -1} to represent the target number does not exist in the matrix.
